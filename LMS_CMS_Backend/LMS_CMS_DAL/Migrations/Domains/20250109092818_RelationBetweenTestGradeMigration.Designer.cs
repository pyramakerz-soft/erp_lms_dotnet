// <auto-generated />
using System;
using LMS_CMS_DAL.Models.Domains;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS_CMS_DAL.Migrations.Domains
{
    [DbContext(typeof(LMS_CMS_Context))]
    [Migration("20250109092818_RelationBetweenTestGradeMigration")]
    partial class RelationBetweenTestGradeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.Bus", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("BackPrice")
                        .HasColumnType("int");

                    b.Property<long?>("BusCompanyID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusDistrictID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusStatusID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("Capacity")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DriverAssistantID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DriverID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCapacityRestricted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MorningPrice")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TwoWaysPrice")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BusCompanyID");

                    b.HasIndex("BusDistrictID");

                    b.HasIndex("BusStatusID");

                    b.HasIndex("BusTypeID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("DriverAssistantID");

                    b.HasIndex("DriverID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusCategory");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusCompany");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusDistrict", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusDistrict");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusStatus");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStudent", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("BusCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("BusID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExceptionFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsException")
                        .HasColumnType("bit");

                    b.Property<long>("SemseterID")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BusCategoryID");

                    b.HasIndex("BusID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SemseterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusStudent");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Employee", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BusCompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmployeeTypeID")
                        .HasColumnType("bigint");

                    b.Property<string>("ExpireDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Role_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("BusCompanyID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("EmployeeTypeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Role_ID");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.EmployeeAttachment", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("EmployeeAttachment");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.EmployeeType", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.AcademicYear", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("DateFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SchoolID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SchoolID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("AcademicYear");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Building", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SchoolID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SchoolID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Classroom", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("AcademicYearID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("FloorID")
                        .HasColumnType("bigint");

                    b.Property<long>("GradeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("FloorID");

                    b.HasIndex("GradeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Floor", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FloorMonitorID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("buildingID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("FloorMonitorID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("buildingID");

                    b.ToTable("Floor");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Grade", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("DateFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SectionID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SectionID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.School", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReportHeaderOneAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportHeaderOneEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportHeaderTwoAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportHeaderTwoEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SchoolTypeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SchoolTypeID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("School");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.SchoolType", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("SchoolType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Section", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SchoolID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SchoolID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Semester", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("AcademicYearID")
                        .HasColumnType("bigint");

                    b.Property<string>("DateFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Student", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Parent_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Student");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.StudentAcademicYear", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("ClassID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("GradeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("SchoolID")
                        .HasColumnType("bigint");

                    b.Property<long>("SemesterID")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("GradeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SchoolID");

                    b.HasIndex("SemesterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("StudentAcademicYear");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Subject", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<double>("CreditHours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("GradeID")
                        .HasColumnType("bigint");

                    b.Property<bool>("HideFromGradeReport")
                        .HasColumnType("bit");

                    b.Property<string>("IconLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfSessionPerWeek")
                        .HasColumnType("int");

                    b.Property<int>("OrderInCertificate")
                        .HasColumnType("int");

                    b.Property<int>("PassByDegree")
                        .HasColumnType("int");

                    b.Property<long>("SubjectCategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalMark")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("GradeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SubjectCategoryID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.SubjectCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("SubjectCategory");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Page", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<long?>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Page_ID");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Parent", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Parent");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.CategoryField", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("FieldTypeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<int>("OrderInForm")
                        .HasColumnType("int");

                    b.Property<long>("RegistrationCategoryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("FieldTypeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("RegistrationCategoryID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("CategoryField");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.FieldOption", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryFieldID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CategoryFieldID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("FieldOption");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.FieldType", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("FieldType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.InterviewState", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("InterviewState");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.InterviewTime", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("AcademicYearID")
                        .HasColumnType("bigint");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FromTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Reserved")
                        .HasColumnType("int");

                    b.Property<string>("ToTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("InterviewTime");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.MCQQuestionOption", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Question_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Question_ID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("MCQQuestionOption");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.Question", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("CorrectAnswerID")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("QuestionTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("TestID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CorrectAnswerID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("QuestionTypeID");

                    b.HasIndex("TestID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.QuestionType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("QuestionType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormInterview", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InterviewStateID")
                        .HasColumnType("bigint");

                    b.Property<long>("InterviewTimeID")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RegisterationFormParentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("InterviewStateID");

                    b.HasIndex("InterviewTimeID");

                    b.HasIndex("RegisterationFormParentID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("RegisterationFormInterview");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormParent", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("GradeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ParentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegisterationFormStateID")
                        .HasColumnType("bigint");

                    b.Property<long>("RegistrationFormID")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("ParentID");

                    b.HasIndex("RegisterationFormStateID");

                    b.HasIndex("RegistrationFormID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("RegisterationFormParent");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormState", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RegisterationFormState");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormSubmittion", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CategoryFieldID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RegisterationFormParentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CategoryFieldID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("RegisterationFormParentID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("RegisterationFormSubmittion");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormTest", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Mark")
                        .HasColumnType("float");

                    b.Property<long>("RegisterationFormParentID")
                        .HasColumnType("bigint");

                    b.Property<long>("StateID")
                        .HasColumnType("bigint");

                    b.Property<long>("TestID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("VisibleToParent")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("RegisterationFormParentID");

                    b.HasIndex("StateID");

                    b.HasIndex("TestID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("RegisterationFormTest");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormTestAnswer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("AnswerID")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("EssayAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("QuestionID")
                        .HasColumnType("bigint");

                    b.Property<long>("RegisterationFormParentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AnswerID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("QuestionID");

                    b.HasIndex("RegisterationFormParentID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("RegisterationFormTestAnswer");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("ArName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("EnName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OrderInForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegistrationFormID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("RegistrationFormID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("RegistrationCategory");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationForm", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("RegistrationForm");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.Test", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("AcademicYearID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("GradeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("SubjectID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalMark")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("GradeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SubjectID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.TestState", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TestState");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role_Detailes", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<bool>("Allow_Delete")
                        .HasColumnType("bit");

                    b.Property<bool>("Allow_Delete_For_Others")
                        .HasColumnType("bit");

                    b.Property<bool>("Allow_Edit")
                        .HasColumnType("bit");

                    b.Property<bool>("Allow_Edit_For_Others")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("Role_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Page_ID");

                    b.HasIndex("Role_ID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.ViolationModule.EmployeeTypeViolation", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeTypeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ViolationID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("EmployeeTypeID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("ViolationID");

                    b.ToTable("EmployeeTypeViolation");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.ViolationModule.Violation", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Violation");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.Bus", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", "BusCompany")
                        .WithMany("Buses")
                        .HasForeignKey("BusCompanyID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusDistrict", "BusDistrict")
                        .WithMany("Buses")
                        .HasForeignKey("BusDistrictID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", "BusStatus")
                        .WithMany("Buses")
                        .HasForeignKey("BusStatusID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusType", "BusType")
                        .WithMany("Buses")
                        .HasForeignKey("BusTypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DriverAssistant")
                        .WithMany("DriverAssistant")
                        .HasForeignKey("DriverAssistantID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "Driver")
                        .WithMany("DrivenBuses")
                        .HasForeignKey("DriverID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("BusCompany");

                    b.Navigation("BusDistrict");

                    b.Navigation("BusStatus");

                    b.Navigation("BusType");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("Driver");

                    b.Navigation("DriverAssistant");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusDistrict", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStudent", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", "BusCategory")
                        .WithMany("BusStudents")
                        .HasForeignKey("BusCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.Bus", "Bus")
                        .WithMany("BusStudents")
                        .HasForeignKey("BusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Semester", "Semester")
                        .WithMany("BusStudents")
                        .HasForeignKey("SemseterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Student", "Student")
                        .WithMany("BusStudents")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("Bus");

                    b.Navigation("BusCategory");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("Semester");

                    b.Navigation("Student");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusType", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Employee", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", "BusCompany")
                        .WithMany("Employees")
                        .HasForeignKey("BusCompanyID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.EmployeeType", "EmployeeType")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Role", "Role")
                        .WithMany("Employess")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("BusCompany");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EmployeeType");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.EmployeeAttachment", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "Employee")
                        .WithMany("EmployeeAttachments")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("Employee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.AcademicYear", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.School", "School")
                        .WithMany("AcademicYears")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("School");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Building", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.School", "school")
                        .WithMany("Buildings")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("school");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Classroom", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.AcademicYear", "AcademicYear")
                        .WithMany("Classrooms")
                        .HasForeignKey("AcademicYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Floor", "Floor")
                        .WithMany("Classrooms")
                        .HasForeignKey("FloorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Grade", "Grade")
                        .WithMany("Classrooms")
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("AcademicYear");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("Floor");

                    b.Navigation("Grade");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Floor", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "floorMonitor")
                        .WithMany("Floors")
                        .HasForeignKey("FloorMonitorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Building", "building")
                        .WithMany("Floors")
                        .HasForeignKey("buildingID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("building");

                    b.Navigation("floorMonitor");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Grade", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Section", "Section")
                        .WithMany("Grades")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("Section");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.School", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.SchoolType", "SchoolType")
                        .WithMany("Schools")
                        .HasForeignKey("SchoolTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("SchoolType");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Section", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.School", "school")
                        .WithMany("Sections")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("school");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Semester", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.AcademicYear", "AcademicYear")
                        .WithMany("Semesters")
                        .HasForeignKey("AcademicYearID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("AcademicYear");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Student", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("Parent_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("Parent");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.StudentAcademicYear", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Classroom", "Classroom")
                        .WithMany("StudentAcademicYears")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Grade", "Grade")
                        .WithMany("StudentAcademicYears")
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.School", "School")
                        .WithMany("StudentAcademicYears")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Semester", "Semester")
                        .WithMany("StudentAcademicYears")
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Student", "Student")
                        .WithMany("StudentAcademicYears")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("Classroom");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("Grade");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("School");

                    b.Navigation("Semester");

                    b.Navigation("Student");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Subject", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Grade", "Grade")
                        .WithMany("Subjects")
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.SubjectCategory", "SubjectCategory")
                        .WithMany("Subjects")
                        .HasForeignKey("SubjectCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("Grade");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("SubjectCategory");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.SubjectCategory", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Page", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Page", "Parent")
                        .WithMany("ChildPages")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Parent", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.CategoryField", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.FieldType", "FieldType")
                        .WithMany("CategoryFields")
                        .HasForeignKey("FieldTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationCategory", "RegistrationCategory")
                        .WithMany("CategoryFields")
                        .HasForeignKey("RegistrationCategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("FieldType");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("RegistrationCategory");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.FieldOption", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.CategoryField", "CategoryField")
                        .WithMany("FieldOptions")
                        .HasForeignKey("CategoryFieldID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CategoryField");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.InterviewTime", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.AcademicYear", "AcademicYear")
                        .WithMany("InterviewTimes")
                        .HasForeignKey("AcademicYearID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("AcademicYear");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.MCQQuestionOption", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.Question", "Question")
                        .WithMany("MCQQuestionOptions")
                        .HasForeignKey("Question_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("Question");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.Question", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.MCQQuestionOption", "mCQQuestionOption")
                        .WithMany("Questions")
                        .HasForeignKey("CorrectAnswerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.QuestionType", "QuestionType")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.Test", "test")
                        .WithMany("Questions")
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("QuestionType");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("mCQQuestionOption");

                    b.Navigation("test");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormInterview", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.InterviewState", "InterviewState")
                        .WithMany("RegisterationFormInterviews")
                        .HasForeignKey("InterviewStateID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.InterviewTime", "InterviewTime")
                        .WithMany("RegisterationFormInterviews")
                        .HasForeignKey("InterviewTimeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormParent", "RegisterationFormParent")
                        .WithMany("RegisterationFormInterviews")
                        .HasForeignKey("RegisterationFormParentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InterviewState");

                    b.Navigation("InterviewTime");

                    b.Navigation("RegisterationFormParent");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormParent", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Parent", "Parent")
                        .WithMany("RegisterationFormParents")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormState", "RegisterationFormState")
                        .WithMany("RegisterationFormParents")
                        .HasForeignKey("RegisterationFormStateID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationForm", "RegistrationForm")
                        .WithMany("RegisterationFormParents")
                        .HasForeignKey("RegistrationFormID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("Parent");

                    b.Navigation("RegisterationFormState");

                    b.Navigation("RegistrationForm");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormSubmittion", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.CategoryField", "CategoryField")
                        .WithMany("RegisterationFormSubmittions")
                        .HasForeignKey("CategoryFieldID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormParent", "RegisterationFormParent")
                        .WithMany("RegisterationFormSubmittions")
                        .HasForeignKey("RegisterationFormParentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("CategoryField");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("RegisterationFormParent");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormTest", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormParent", "RegisterationFormParent")
                        .WithMany("RegisterationFormTests")
                        .HasForeignKey("RegisterationFormParentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.TestState", "TestState")
                        .WithMany("RegisterationFormTests")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.Test", "Test")
                        .WithMany("RegisterationFormTests")
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("RegisterationFormParent");

                    b.Navigation("Test");

                    b.Navigation("TestState");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormTestAnswer", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.MCQQuestionOption", "MCQQuestionOption")
                        .WithMany("RegisterationFormTestAnswers")
                        .HasForeignKey("AnswerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.Question", "Question")
                        .WithMany("RegisterationFormTestAnswers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormParent", "RegisterationFormParent")
                        .WithMany("RegisterationFormTestAnswers")
                        .HasForeignKey("RegisterationFormParentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("MCQQuestionOption");

                    b.Navigation("Question");

                    b.Navigation("RegisterationFormParent");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationCategory", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationForm", "RegistrationForm")
                        .WithMany("RegistrationCategorys")
                        .HasForeignKey("RegistrationFormID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("RegistrationForm");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationForm", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.Test", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.AcademicYear", "academicYear")
                        .WithMany("Tests")
                        .HasForeignKey("AcademicYearID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Grade", "Grade")
                        .WithMany("Tests")
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.LMS.Subject", "subject")
                        .WithMany("Tests")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("Grade");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("academicYear");

                    b.Navigation("subject");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role_Detailes", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Page", "Page")
                        .WithMany("Role_Detailes")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Role", "Role")
                        .WithMany("Role_Detailes")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("Page");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.ViolationModule.EmployeeTypeViolation", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.EmployeeType", "EmployeeType")
                        .WithMany("EmployeeTypeViolations")
                        .HasForeignKey("EmployeeTypeID");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.ViolationModule.Violation", "Violation")
                        .WithMany("EmployeeTypeViolations")
                        .HasForeignKey("ViolationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("EmployeeType");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("Violation");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.ViolationModule.Violation", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.Bus", b =>
                {
                    b.Navigation("BusStudents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", b =>
                {
                    b.Navigation("BusStudents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", b =>
                {
                    b.Navigation("Buses");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusDistrict", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusType", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Employee", b =>
                {
                    b.Navigation("DrivenBuses");

                    b.Navigation("DriverAssistant");

                    b.Navigation("EmployeeAttachments");

                    b.Navigation("Floors");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.EmployeeType", b =>
                {
                    b.Navigation("EmployeeTypeViolations");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.AcademicYear", b =>
                {
                    b.Navigation("Classrooms");

                    b.Navigation("InterviewTimes");

                    b.Navigation("Semesters");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Building", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Classroom", b =>
                {
                    b.Navigation("StudentAcademicYears");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Floor", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Grade", b =>
                {
                    b.Navigation("Classrooms");

                    b.Navigation("StudentAcademicYears");

                    b.Navigation("Subjects");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.School", b =>
                {
                    b.Navigation("AcademicYears");

                    b.Navigation("Buildings");

                    b.Navigation("Sections");

                    b.Navigation("StudentAcademicYears");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.SchoolType", b =>
                {
                    b.Navigation("Schools");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Section", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Semester", b =>
                {
                    b.Navigation("BusStudents");

                    b.Navigation("StudentAcademicYears");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Student", b =>
                {
                    b.Navigation("BusStudents");

                    b.Navigation("StudentAcademicYears");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.Subject", b =>
                {
                    b.Navigation("Tests");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.LMS.SubjectCategory", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Page", b =>
                {
                    b.Navigation("ChildPages");

                    b.Navigation("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Parent", b =>
                {
                    b.Navigation("RegisterationFormParents");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.CategoryField", b =>
                {
                    b.Navigation("FieldOptions");

                    b.Navigation("RegisterationFormSubmittions");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.FieldType", b =>
                {
                    b.Navigation("CategoryFields");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.InterviewState", b =>
                {
                    b.Navigation("RegisterationFormInterviews");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.InterviewTime", b =>
                {
                    b.Navigation("RegisterationFormInterviews");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.MCQQuestionOption", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("RegisterationFormTestAnswers");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.Question", b =>
                {
                    b.Navigation("MCQQuestionOptions");

                    b.Navigation("RegisterationFormTestAnswers");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.QuestionType", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormParent", b =>
                {
                    b.Navigation("RegisterationFormInterviews");

                    b.Navigation("RegisterationFormSubmittions");

                    b.Navigation("RegisterationFormTestAnswers");

                    b.Navigation("RegisterationFormTests");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegisterationFormState", b =>
                {
                    b.Navigation("RegisterationFormParents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationCategory", b =>
                {
                    b.Navigation("CategoryFields");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.RegistrationForm", b =>
                {
                    b.Navigation("RegisterationFormParents");

                    b.Navigation("RegistrationCategorys");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.Test", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("RegisterationFormTests");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.RegisterationModule.TestState", b =>
                {
                    b.Navigation("RegisterationFormTests");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role", b =>
                {
                    b.Navigation("Employess");

                    b.Navigation("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.ViolationModule.Violation", b =>
                {
                    b.Navigation("EmployeeTypeViolations");
                });
#pragma warning restore 612, 618
        }
    }
}

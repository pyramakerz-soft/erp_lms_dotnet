// <auto-generated />
using System;
using LMS_CMS_DAL.Models.Domains;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS_CMS_DAL.Migrations.Domains
{
    [DbContext(typeof(LMS_CMS_Context))]
    [Migration("20241204133054_RemovePyramakerzTableMigration")]
    partial class RemovePyramakerzTableMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.AcademicYear", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SchoolID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SchoolID");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("AcademicYear");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.Bus", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("BusCompanyID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusRestrictID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusStatusID")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("Capacity")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DriverAssistantID")
                        .HasColumnType("bigint");

                    b.Property<long?>("DriverID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCapacityRestricted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BusCompanyID");

                    b.HasIndex("BusRestrictID");

                    b.HasIndex("BusStatusID");

                    b.HasIndex("BusTypeID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("DriverAssistantID");

                    b.HasIndex("DriverID");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusCategory");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusCompany");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusRestrict", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusRestrict");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusStatus");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStudent", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("BusCategoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("BusID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExceptionFromDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExceptionToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsException")
                        .HasColumnType("bit");

                    b.Property<long?>("SemseterID")
                        .HasColumnType("bigint");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BusCategoryID");

                    b.HasIndex("BusID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("SemseterID");

                    b.HasIndex("StudentID");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusStudent");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("BusType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Employee", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("BusCompanyID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeTypeID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Role_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("BusCompanyID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("EmployeeTypeID");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Role_ID");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.EmployeeType", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Page", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Page_ID");

                    b.HasIndex("ar_name")
                        .IsUnique();

                    b.HasIndex("en_name")
                        .IsUnique();

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Parent", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role_Detailes", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<bool>("Allow_Delete")
                        .HasColumnType("bit");

                    b.Property<bool>("Allow_Delete_For_Others")
                        .HasColumnType("bit");

                    b.Property<bool>("Allow_Edit")
                        .HasColumnType("bit");

                    b.Property<bool>("Allow_Edit_For_Others")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("Role_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Page_ID");

                    b.HasIndex("Role_ID");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.School", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Semester", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("AcademicYearID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("AcademicYearID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Student", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Parent_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByOctaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByOctaId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InsertedByOctaId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("UpdatedByOctaId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Octa", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Octa");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.AcademicYear", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.School", "School")
                        .WithMany("AcademicYears")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("School");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.Bus", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", "BusCompany")
                        .WithMany("Buses")
                        .HasForeignKey("BusCompanyID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusRestrict", "BusRestrict")
                        .WithMany("Buses")
                        .HasForeignKey("BusRestrictID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", "BusStatus")
                        .WithMany("Buses")
                        .HasForeignKey("BusStatusID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusType", "BusType")
                        .WithMany("Buses")
                        .HasForeignKey("BusTypeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DriverAssistant")
                        .WithMany("DriverAssistant")
                        .HasForeignKey("DriverAssistantID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "Driver")
                        .WithMany("DrivenBuses")
                        .HasForeignKey("DriverID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("BusCompany");

                    b.Navigation("BusRestrict");

                    b.Navigation("BusStatus");

                    b.Navigation("BusType");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("Driver");

                    b.Navigation("DriverAssistant");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusRestrict", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStudent", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", "BusCategory")
                        .WithMany("BusStudents")
                        .HasForeignKey("BusCategoryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.Bus", "Bus")
                        .WithMany("BusStudents")
                        .HasForeignKey("BusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Semester", "Semester")
                        .WithMany("BusStudents")
                        .HasForeignKey("SemseterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Student", "Student")
                        .WithMany("BusStudents")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("Bus");

                    b.Navigation("BusCategory");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("Semester");

                    b.Navigation("Student");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusType", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Employee", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", "BusCompany")
                        .WithMany("Employees")
                        .HasForeignKey("BusCompanyID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.EmployeeType", "EmployeeType")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Role", "Role")
                        .WithMany("Employess")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("BusCompany");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("EmployeeType");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Page", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.Page", "Parent")
                        .WithMany("ChildPages")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Parent", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role_Detailes", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Page", "Page")
                        .WithMany("Role_Detailes")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Role", "Role")
                        .WithMany("Role_Detailes")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("Page");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.School", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Semester", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Domains.AcademicYear", "AcademicYear")
                        .WithMany("Semesters")
                        .HasForeignKey("AcademicYearID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("AcademicYear");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Student", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedByOcta")
                        .WithMany()
                        .HasForeignKey("DeletedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "DeletedByEmployee")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedByOcta")
                        .WithMany()
                        .HasForeignKey("InsertedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "InsertedByEmployee")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("Parent_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedByOcta")
                        .WithMany()
                        .HasForeignKey("UpdatedByOctaId");

                    b.HasOne("LMS_CMS_DAL.Models.Domains.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByEmployee");

                    b.Navigation("DeletedByOcta");

                    b.Navigation("InsertedByEmployee");

                    b.Navigation("InsertedByOcta");

                    b.Navigation("Parent");

                    b.Navigation("UpdatedByEmployee");

                    b.Navigation("UpdatedByOcta");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.AcademicYear", b =>
                {
                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.Bus", b =>
                {
                    b.Navigation("BusStudents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCategory", b =>
                {
                    b.Navigation("BusStudents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusCompany", b =>
                {
                    b.Navigation("Buses");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusRestrict", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusStatus", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.BusModule.BusType", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Employee", b =>
                {
                    b.Navigation("DrivenBuses");

                    b.Navigation("DriverAssistant");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.EmployeeType", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Page", b =>
                {
                    b.Navigation("ChildPages");

                    b.Navigation("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Parent", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Role", b =>
                {
                    b.Navigation("Employess");

                    b.Navigation("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.School", b =>
                {
                    b.Navigation("AcademicYears");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Semester", b =>
                {
                    b.Navigation("BusStudents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domains.Student", b =>
                {
                    b.Navigation("BusStudents");
                });
#pragma warning restore 612, 618
        }
    }
}

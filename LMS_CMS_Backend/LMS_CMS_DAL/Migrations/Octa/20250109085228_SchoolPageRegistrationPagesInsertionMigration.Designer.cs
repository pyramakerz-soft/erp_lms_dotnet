// <auto-generated />
using System;
using LMS_CMS_DAL.Models.Octa;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS_CMS_DAL.Migrations.Octa
{
    [DbContext(typeof(Octa_DbContext))]
    [Migration("20250109085228_SchoolPageRegistrationPagesInsertionMigration")]
    partial class SchoolPageRegistrationPagesInsertionMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Domain", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Octa", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Arabic_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Octa");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Page", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<long?>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("Page_ID");

                    b.HasIndex("ar_name")
                        .IsUnique();

                    b.HasIndex("en_name")
                        .IsUnique();

                    b.ToTable("Page");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.SchoolType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("SchoolType");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Domain", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedBy")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedBy");

                    b.Navigation("InsertedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Octa", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedBy")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedBy");

                    b.Navigation("InsertedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Page", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Page", "Parent")
                        .WithMany("ChildPages")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.SchoolType", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "InsertedBy")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Octa.Octa", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedBy");

                    b.Navigation("InsertedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Octa.Page", b =>
                {
                    b.Navigation("ChildPages");
                });
#pragma warning restore 612, 618
        }
    }
}

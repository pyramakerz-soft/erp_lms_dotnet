// <auto-generated />
using System;
using LMS_CMS_DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS_CMS_DAL.Migrations
{
    [DbContext(typeof(LMS_CMS_Context))]
    partial class LMS_CMS_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domain", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domain_Page_Detailes", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Domain_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Domain_ID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Page_ID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Domain_Page_Details");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Employee", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Domain_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Role_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Domain_ID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Role_ID");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Page", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Page_ID");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("ar_name")
                        .IsUnique();

                    b.HasIndex("en_name")
                        .IsUnique();

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Parent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Pyramakerz", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Pyramakerz");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Role", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Domain_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Domain_ID");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Role_Detailes", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<bool>("Allow_Delete")
                        .HasColumnType("bit");

                    b.Property<bool>("Allow_Edit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Page_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("Role_ID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Page_ID");

                    b.HasIndex("Role_ID");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("Domain_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Domain_id");

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InsertedByUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Parent_Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ar_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("en_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InsertedByUserId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("UpdatedByUserId");

                    b.HasIndex("User_Name")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domain", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("InsertedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domain_Page_Detailes", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domain", "Domain")
                        .WithMany("Domain_Page_Detailes")
                        .HasForeignKey("Domain_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Page", "Page")
                        .WithMany("Domain_Page_Detailes")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Domain");

                    b.Navigation("InsertedByUser");

                    b.Navigation("Page");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Employee", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domain", "Domain")
                        .WithMany("Employess")
                        .HasForeignKey("Domain_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Role", "Role")
                        .WithMany("Employess")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Domain");

                    b.Navigation("InsertedByUser");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Page", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Page", "Parent")
                        .WithMany("ChildPages")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("InsertedByUser");

                    b.Navigation("Parent");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Parent", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("InsertedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Pyramakerz", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("InsertedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Role", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domain", "Domain")
                        .WithMany("Roles")
                        .HasForeignKey("Domain_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Domain");

                    b.Navigation("InsertedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Role_Detailes", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Page", "Page")
                        .WithMany("Role_Detailes")
                        .HasForeignKey("Page_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Role", "Role")
                        .WithMany("Role_Detailes")
                        .HasForeignKey("Role_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("InsertedByUser");

                    b.Navigation("Page");

                    b.Navigation("Role");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.School", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Domain", "Domain")
                        .WithMany("Schools")
                        .HasForeignKey("Domain_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Domain");

                    b.Navigation("InsertedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Student", b =>
                {
                    b.HasOne("LMS_CMS_DAL.Models.Employee", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "InsertedByUser")
                        .WithMany()
                        .HasForeignKey("InsertedByUserId");

                    b.HasOne("LMS_CMS_DAL.Models.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("Parent_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LMS_CMS_DAL.Models.Employee", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId");

                    b.Navigation("DeletedByUser");

                    b.Navigation("InsertedByUser");

                    b.Navigation("Parent");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Domain", b =>
                {
                    b.Navigation("Domain_Page_Detailes");

                    b.Navigation("Employess");

                    b.Navigation("Roles");

                    b.Navigation("Schools");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Page", b =>
                {
                    b.Navigation("ChildPages");

                    b.Navigation("Domain_Page_Detailes");

                    b.Navigation("Role_Detailes");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Parent", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("LMS_CMS_DAL.Models.Role", b =>
                {
                    b.Navigation("Employess");

                    b.Navigation("Role_Detailes");
                });
#pragma warning restore 612, 618
        }
    }
}
